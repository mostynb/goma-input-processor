config("chromium_base_config") {
  if (is_win_gcc) {
    # without this, on #include<intrin.h>:
    # msys64/mingw64/lib/gcc/x86_64-w64-mingw32/10.2.0/include/xsaveintrin.h:60:1:
    # error: inlining failed in call to 'always_inline'
    # 'long long int _xgetbv(unsigned int)': target specific option mismatch
    cflags = ["-mxsave"]
  }
  include_dirs = [ "." ]
}

static_library("cpu") {
  sources = [
    "cpu.cc",
    "cpu.h",
  ]

  public_configs = [ ":chromium_base_config" ]
}

executable("cpu_unittest") {
  testonly = true
  sources = [ "cpu_unittest.cc" ]
  deps = [
    ":cpu",
    "//build/config:exe_and_shlib_deps",
    "//third_party:glog",
    "//third_party:gtest",
    "//third_party:gtest_main",
  ]
}

static_library("platform_thread") {
  sources = [
    "platform_thread.cc",
    "platform_thread.h",
  ]

  deps = [
    "//third_party:glog",
    "//third_party/abseil",
  ]

  if (is_win_gcc) {
    cflags = [ "-Wno-cast-function-type" ]
  }

  public_configs = [ ":chromium_base_config" ]
}

if (os == "mac") {
  static_library("mac_version") {
    sources = [
      "mac_version.cc",
      "mac_version.h",
    ]

    deps = [
      "//third_party:glog",
      "//third_party/abseil",
    ]

    public_configs = [ ":chromium_base_config" ]
  }

  executable("mac_version_unittest") {
    testonly = true
    sources = [ "mac_version_unittest.cc" ]
    deps = [
      ":mac_version",
      "//third_party:glog",
      "//third_party:gtest",
      "//third_party:gtest_main",
    ]
  }
}
